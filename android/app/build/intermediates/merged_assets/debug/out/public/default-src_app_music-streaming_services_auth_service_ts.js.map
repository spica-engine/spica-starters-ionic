{"version":3,"sources":["./node_modules/jwt-decode/build/jwt-decode.esm.js","./src/app/music-streaming/services/auth.service.ts","./src/app/music-streaming/services/bucket.ts","./src/app/music-streaming/services/environment.ts","./node_modules/@spica-devkit/identity/dist/index.mjs"],"names":[],"mappings":"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CA;AACA;AACA,wBAAwB,yCAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B,+BAA+B,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,mDAAmD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C,sBAAsB,gBAAgB,WAAW,WAAW,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB,GAAG,GAAG;AAClD;AACA,gCAAgC;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,4BAA4B,gBAAgB,GAAG,GAAG;AAClD;AACA;AACA;AACA,+BAA+B,gBAAgB,GAAG,GAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB,GAAG,WAAW,UAAU,SAAS,KAAK;AAC9E;AACA;AACA,iEAAiE,SAAS;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB,GAAG,WAAW,UAAU,SAAS;AAC5E;AACA;AACA,iEAAiE,SAAS;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;;AAE8E;AACvG","file":"default-src_app_music-streaming_services_auth_service_ts.js","sourcesContent":["function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import { Injectable } from '@angular/core';\nimport * as identity from '@spica-devkit/identity';\nimport * as DataService from './bucket';\nimport jwt_decode from 'jwt-decode';\nimport { from, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  activeUser: DataService.User;\n  activeToken: string;\n\n  constructor(private http: HttpClient) {\n    DataService.initialize({ apikey: environment.apikey });\n    identity.initialize({\n      publicUrl: environment.apiUrl,\n      apikey: environment.apikey,\n    });\n  }\n\n  initBucket() {\n    let tokenExpire = localStorage.getItem(environment.EXPIRE_KEY);\n    if (tokenExpire && new Date(tokenExpire) < new Date()) {\n      localStorage.clear();\n    }\n    if (localStorage.getItem(environment.TOKEN_KEY)) {\n      DataService.initialize({\n        identity: localStorage.getItem(environment.TOKEN_KEY),\n      });\n    } else {\n      DataService.initialize({\n        apikey: environment.apikey,\n      });\n    }\n  }\n\n  login(identifier, password) {\n    return from(identity.login(identifier, password)).pipe(\n      tap(async (token) => {\n        localStorage.setItem(environment.TOKEN_KEY, token);\n\n        let date = new Date();\n        date.setDate(date.getDate() + 2); // 2 days later\n        localStorage.setItem(environment.EXPIRE_KEY, String(date));\n        this.activeToken = token;\n      }),\n      switchMap(() => this.getUser())\n    );\n  }\n\n  logout() {\n    this.activeUser = undefined;\n    localStorage.removeItem(environment.TOKEN_KEY)\n  }\n\n  register(user_data) {\n    return this.http\n      .post(`${environment.apiUrl}/fn-execute/register`, {\n        user_data,\n        project:\"MUSIC_STREAM\"\n      })\n      .toPromise();\n  }\n\n  forgotPassword(identity_id: string) {\n    return this.http\n      .get(\n        `${environment.apiUrl}/fn-execute/forgot-password?identity_id=${identity_id}`\n      )\n      .toPromise();\n  }\n\n  sendForgotPasswordEmail(email: string) {\n    return this.http\n      .post(`${environment.apiUrl}/fn-execute/sendMailForForgotPassword`, {\n        email,\n      })\n      .toPromise();\n  }\n\n  changePassword(identity_id: string, password: string) {\n    return this.http\n      .post(`${environment.apiUrl}/fn-execute/change-password`, {\n        identity_id,\n        password,\n      })\n      .toPromise();\n  }\n\n  changeEmail(identity_id: string, email: string) {\n    return this.http\n      .post(`${environment.apiUrl}/fn-execute/change-email`, {\n        identity_id,\n        email,\n      })\n      .toPromise();\n  }\n\n  isUserLoggedIn(): boolean {\n    return localStorage.getItem(environment.TOKEN_KEY) ? true : false;\n  }\n\n  getActiveToken(): any {\n    return this.tokenDecode(localStorage.getItem(environment.TOKEN_KEY));\n  }\n\n  private tokenDecode(token) {\n    if (token) return jwt_decode(token);\n    return false;\n  }\n\n  //Gets user info after taking token stored in local storage\n  getUser(clean: boolean = false): Observable<DataService.User> {\n    if (this.activeUser && !clean) return of(this.activeUser);\n    return of(this.getActiveToken()).pipe(\n      switchMap((token) =>\n        token\n          ? DataService.user.getAll({\n              queryParams: { filter: { identity_id: token._id } },\n            })\n          : of([null])\n      ),\n      map((users) => users[0]),\n      tap((user) => (this.activeUser = user))\n    );\n  }\n\n  checkCurrentPassword(identifier, password) {\n    return identity.login(identifier, password);\n  }\n\n  isAuthenticated(): Observable<boolean> {\n    let result: boolean = true;\n    if (\n      localStorage.getItem(environment.EXPIRE_KEY) &&\n      new Date() > new Date(localStorage.getItem(environment.EXPIRE_KEY))\n    )\n      result = false;\n    return of(result);\n  }\n}\n","import * as Bucket from '@spica-devkit/bucket';\n/**\n * Call this method before interacting with buckets.\n * @param initOptions Initialize options to initialize the '@spica-devkit/bucket'.\n */\nexport function initialize(\n  ...initOptions: Parameters<typeof Bucket.initialize>\n) {\n  initOptions[0].publicUrl = 'https://spica-starters-7229b.hq.spicaengine.com/api';\n  Bucket.initialize(...initOptions);\n}\n\ntype Rest<T extends any[]> = ((...p: T) => void) extends ((p1: infer P1, ...rest: infer R) => void) ? R : never;\ntype getArgs = Rest<Parameters<typeof Bucket.data.get>>;\ntype getAllArgs = Rest<Parameters<typeof Bucket.data.getAll>>;\ntype realtimeGetArgs = Rest<Parameters<typeof Bucket.data.realtime.get>>;\ntype realtimeGetAllArgs = Rest<Parameters<typeof Bucket.data.realtime.getAll>>;\ntype id = { _id: string };\nexport interface User{\n  _id?: string;\n  username?: string;\n  name?: string;\n  surname?: string;\n  identity_id?: string;\n  email?: string;\n  bio?: string;\n  birthday?: Date | string;\n  gender?: ('Male'|'Female'|'Other');\n  country?: ('TR'|'EN'|'US'|'DE'|'BR');\n  profile_picture?: string;\n  is_verified?: boolean;\n  followed_artists?: (Artist & id | string)[];\n  friends?: (User & id | string)[];\n  uploaded_tracks?: (Track & id | string)[];\n  uploaded_albums?: (Music_Album & id | string)[];\n  uploaded_playlists?: (Playlist & id | string)[];\n  play_history?: (Track & id | string)[];\n  currently_playing?: (Track & id | string);\n  playlists?: (Playlist & id | string)[];\n  liked_tracks?: (Track & id | string)[];\n  liked_albums?: (Music_Album & id | string)[];\n  liked_playlists?: (Playlist & id | string)[];\n}\nexport namespace user {\n  const BUCKET_ID = '61b73225b7f4a7002e04d305';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<User & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<User & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<User, \"_id\">) {\n      ['followed_artists','friends','uploaded_tracks','uploaded_albums','uploaded_playlists','play_history','currently_playing','playlists','liked_tracks','liked_albums','liked_playlists'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: User & id) {\n      ['followed_artists','friends','uploaded_tracks','uploaded_albums','uploaded_playlists','play_history','currently_playing','playlists','liked_tracks','liked_albums','liked_playlists'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<User> & id\n    ) {\n      ['followed_artists','friends','uploaded_tracks','uploaded_albums','uploaded_playlists','play_history','currently_playing','playlists','liked_tracks','liked_albums','liked_playlists'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<User & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<User & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Artist{\n  _id?: string;\n  name?: string;\n  surname?: string;\n  identity_id?: string;\n  profile_picture?: string;\n  birthday?: Date | string;\n  bio?: string;\n  is_verified?: boolean;\n  uploaded_tracks?: (Track & id | string)[];\n  uploaded_albums?: (Music_Album & id | string)[];\n  followers?: (User & id | string)[];\n  popularity?: number;\n}\nexport namespace artist {\n  const BUCKET_ID = '61b73223b7f4a7002e04d302';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Artist & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Artist & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Artist, \"_id\">) {\n      ['uploaded_tracks','uploaded_albums','followers'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Artist & id) {\n      ['uploaded_tracks','uploaded_albums','followers'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Artist> & id\n    ) {\n      ['uploaded_tracks','uploaded_albums','followers'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Artist & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Artist & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Track{\n  _id?: string;\n  name?: string;\n  description?: string;\n  created_at?: Date | string;\n  cover?: string;\n  source?: string;\n  clip?: string;\n  artist?: (Artist & id | string);\n  user?: (User & id | string);\n  album?: (Music_Album & id | string);\n  likes?: (User & id | string)[];\n  stream_count?: number;\n  features?: {\n  danceability?: number;\n  loudness?: number;\n  speechiness?: number;\n  energy?: number;\n  tempo?: number;\n  duration?: number;\n  popularity?: number;\n  kinds?: (Track_Kind & id | string)[];\n  explicit?: boolean;\n  language?: ('English'|'Türkçe'|'Français'|'Español'|'Deutsch');};\n}\nexport namespace track {\n  const BUCKET_ID = '61b73220b7f4a7002e04d2ff';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Track & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Track & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Track, \"_id\">) {\n      ['artist','user','album','likes'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Track & id) {\n      ['artist','user','album','likes'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Track> & id\n    ) {\n      ['artist','user','album','likes'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Track & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Track & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Music_Album{\n  _id?: string;\n  name?: string;\n  cover?: string;\n  tracks?: (Track & id | string)[];\n  created_at?: Date | string;\n  likes?: (User & id | string)[];\n  popularity?: number;\n  artist?: (Artist & id | string);\n  user?: (User & id | string);\n}\nexport namespace music_album {\n  const BUCKET_ID = '61b73228b7f4a7002e04d30f';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Music_Album & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Music_Album & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Music_Album, \"_id\">) {\n      ['tracks','likes','artist','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Music_Album & id) {\n      ['tracks','likes','artist','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Music_Album> & id\n    ) {\n      ['tracks','likes','artist','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Music_Album & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Music_Album & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Track_Kind{\n  _id?: string;\n  title?: string;\n  image?: string;\n}\nexport namespace track_kind {\n  const BUCKET_ID = '61b7321fb7f4a7002e04d2fc';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Track_Kind & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Track_Kind & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Track_Kind, \"_id\">) {\n      \n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Track_Kind & id) {\n      \n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Track_Kind> & id\n    ) {\n      \n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Track_Kind & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Track_Kind & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Playlist{\n  _id?: string;\n  name?: string;\n  image?: string;\n  tracks?: (Track & id | string)[];\n  created_at?: Date | string;\n  popularity?: number;\n  owner?: (User & id | string);\n  admins?: (User & id | string)[];\n  likes?: (User & id | string)[];\n  private?: boolean;\n}\nexport namespace playlist {\n  const BUCKET_ID = '61b73226b7f4a7002e04d308';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Playlist & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Playlist & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Playlist, \"_id\">) {\n      ['tracks','owner','admins','likes'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Playlist & id) {\n      ['tracks','owner','admins','likes'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Playlist> & id\n    ) {\n      ['tracks','owner','admins','likes'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id ? v._id : v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Playlist & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Playlist & id>(BUCKET_ID, ...args);\n      };\n  }\n}","export const environment = {\n  apiUrl: \"https://spica-starters-7229b.hq.spicaengine.com/api\",\n  apikey: \"axfb9k1akx06fe2u\",\n  user_img:  \"https://i.pinimg.com/originals/3f/94/70/3f9470b34a8e3f526dbdb022f9f19cf7.jpg\",\n  play_list_img: \"https://ak.picdn.net/shutterstock/videos/1027045601/thumb/1.jpg?ip=x480\",\n  TOKEN_KEY: 'music-streaming_spica_token',\n  EXPIRE_KEY: 'music-streaming_spica_expire',\n};","import axios from 'axios';\n\nfunction logWarning(response) {\n    const warning = response.headers[\"warning\"];\n    if (warning) {\n        console.warn(warning);\n    }\n}\nclass Axios {\n    constructor(config) {\n        this.interceptors = {\n            request: {\n                onFulfilled: (request) => {\n                    if (!request.headers[\"Authorization\"]) {\n                        throw new Error(\"You should call initialize method with a valid apikey or identity token.\");\n                    }\n                    return request;\n                },\n                onRejected: (error) => {\n                    return Promise.reject(error);\n                }\n            },\n            response: {\n                onFulfilled: (response) => {\n                    logWarning(response);\n                    return response.data;\n                },\n                onRejected: (error) => {\n                    return Promise.reject(error.response ? error.response.data : error);\n                }\n            }\n        };\n        this.instance = axios.create(config);\n        this.instance.interceptors.request.use(this.interceptors.request.onFulfilled, this.interceptors.request.onRejected);\n        this.instance.interceptors.response.use(this.interceptors.response.onFulfilled, this.interceptors.response.onRejected);\n        this.baseUrl = this.instance.defaults.baseURL;\n    }\n    setBaseUrl(url) {\n        this.instance.defaults.baseURL = url;\n    }\n    setWriteDefaults(writeDefaults) {\n        for (const [header, value] of Object.entries(writeDefaults.headers)) {\n            this.instance.defaults.headers.post[header] = value;\n            this.instance.defaults.headers.put[header] = value;\n        }\n    }\n    setAuthorization(authorization) {\n        this.instance.defaults.headers[\"Authorization\"] = authorization;\n    }\n    get(url, config) {\n        return this.instance.get(url, config);\n    }\n    post(url, body, config) {\n        return this.instance.post(url, body, config);\n    }\n    put(url, body, config) {\n        return this.instance.put(url, body, config);\n    }\n    patch(url, body, config) {\n        return this.instance.patch(url, body, config);\n    }\n    delete(url, config) {\n        return this.instance.delete(url, config);\n    }\n}\n\nlet service;\nfunction initialize(options) {\n    let authorization;\n    if (\"apikey\" in options) {\n        authorization = `APIKEY ${options.apikey}`;\n    }\n    else if (\"identity\" in options) {\n        authorization = `IDENTITY ${options.identity}`;\n    }\n    checkInitialized(authorization);\n    const publicUrl = options.publicUrl || getPublicUrl();\n    if (!publicUrl) {\n        throw new Error(\"Public url must be provided.\");\n    }\n    if (!service) {\n        service = new Axios({ baseURL: publicUrl, headers: { Authorization: authorization } });\n    }\n    else {\n        service.setBaseUrl(publicUrl);\n        service.setAuthorization(authorization);\n    }\n    return { authorization, publicUrl, service };\n}\nfunction checkInitialized(authorization) {\n    if (!authorization) {\n        throw new Error(\"You should call initialize method with a valid apikey or identity token.\");\n    }\n}\nfunction getPublicUrl() {\n    return isPlatformBrowser() ? undefined : process.env.__INTERNAL__SPICA__PUBLIC_URL__;\n}\nfunction isPlatformBrowser() {\n    return typeof window !== \"undefined\";\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nlet authorization;\nlet service$1;\nconst identitySegment = \"passport/identity\";\nfunction initialize$1(options) {\n    const { authorization: _authorization, service: _service } = initialize(options);\n    authorization = _authorization;\n    service$1 = _service;\n    service$1.setWriteDefaults({\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\nfunction verifyToken(token, baseUrl) {\n    const _baseUrl = baseUrl ? baseUrl : service$1 ? service$1.baseUrl : undefined;\n    if (!_baseUrl) {\n        throw new Error(\"You should pass the base url of the server or call the initialize method.\");\n    }\n    const req = new Axios({ baseURL: _baseUrl });\n    return req.get(`${identitySegment}/verify`, { headers: { Authorization: token } });\n}\nfunction login(identifier, password, tokenLifeSpan) {\n    checkInitialized(authorization);\n    return service$1\n        .post(\"/passport/identify\", {\n        identifier,\n        password,\n        expires: tokenLifeSpan\n    })\n        .then(response => response.token);\n}\nfunction get(id) {\n    checkInitialized(authorization);\n    return service$1.get(`${identitySegment}/${id}`);\n}\nfunction getAll(queryParams = {}) {\n    checkInitialized(authorization);\n    return service$1.get(identitySegment, {\n        params: queryParams\n    });\n}\nfunction insert(identity) {\n    return __awaiter(this, void 0, void 0, function* () {\n        checkInitialized(authorization);\n        const insertedIdentity = yield service$1.post(identitySegment, identity);\n        return policy.attach(insertedIdentity._id, identity.policies).then(policies => {\n            insertedIdentity.policies = policies;\n            return insertedIdentity;\n        });\n    });\n}\nfunction update(id, identity) {\n    checkInitialized(authorization);\n    return service$1.put(`${identitySegment}/${id}`, identity);\n}\nfunction remove(id) {\n    checkInitialized(authorization);\n    return service$1.delete(`${identitySegment}/${id}`);\n}\n// policy attach detach\nvar policy;\n(function (policy) {\n    function attach(identityId, policyIds = []) {\n        checkInitialized(authorization);\n        const promises = [];\n        const attachedPolicies = new Set();\n        for (const policyId of policyIds) {\n            const promise = service$1\n                .put(`${identitySegment}/${identityId}/policy/${policyId}`, {})\n                .then(() => attachedPolicies.add(policyId))\n                .catch(e => {\n                console.error(`Failed to attach policy with id ${policyId}: `, e);\n                return e;\n            });\n            promises.push(promise);\n        }\n        return Promise.all(promises).then(() => Array.from(attachedPolicies));\n    }\n    policy.attach = attach;\n    function detach(identityId, policyIds = []) {\n        checkInitialized(authorization);\n        const promises = [];\n        const detachedPolicies = new Set();\n        for (const policyId of policyIds) {\n            const promise = service$1\n                .delete(`${identitySegment}/${identityId}/policy/${policyId}`)\n                .then(() => detachedPolicies.add(policyId))\n                .catch(e => {\n                console.error(`Failed to detach policy with id ${policyId}: `, e);\n                return e;\n            });\n            promises.push(promise);\n        }\n        return Promise.all(promises).then(() => Array.from(detachedPolicies));\n    }\n    policy.detach = detach;\n})(policy || (policy = {}));\n\nexport { get, getAll, initialize$1 as initialize, insert, login, policy, remove, update, verifyToken };\n//# sourceMappingURL=index.mjs.map\n"],"sourceRoot":"webpack:///"}