{"version":3,"sources":["./node_modules/jwt-decode/build/jwt-decode.esm.js","./src/app/fitness/services/auth.service.ts","./src/app/fitness/services/bucket.ts","./src/app/fitness/services/environment.ts","./node_modules/@spica-devkit/identity/dist/index.mjs"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,cAAc,eAAe,+DAA+D,qFAAqF,kCAAkC,kGAAkG,yBAAyB,gBAAgB,sJAAsJ,UAAU,cAAc,4CAA4C,mBAAmB,aAAa,eAAe,MAAM,cAAc,MAAM,yCAAyC,IAAI,mBAAmB,6DAA6D,iDAAiD,mCAAmC,IAAI,IAAI,SAAS,aAAa,cAAc,eAAe,gBAAgB,6DAA6D,mBAAmB,aAAa,IAAI,sCAAsC,SAAS,oDAAoD,2DAA2D,iEAAe,CAAC,EAAgC;AAC5sC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD2C;AACQ;AACX;AACJ;AACQ;AACS;AACH;AACN;IAK/B,WAAW,SAAX,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,+CAAsB,CAAC,EAAE,MAAM,EAAE,4DAAkB,EAAE,CAAC,CAAC;QACvD,8DAAmB,CAAC;YAClB,SAAS,EAAE,4DAAkB;YAC7B,MAAM,EAAE,4DAAkB;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,gEAAsB,CAAC,CAAC;QAC/D,IAAI,WAAW,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE;YACrD,YAAY,CAAC,KAAK,EAAE,CAAC;SACtB;QACD,IAAI,YAAY,CAAC,OAAO,CAAC,+DAAqB,CAAC,EAAE;YAC/C,+CAAsB,CAAC;gBACrB,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,+DAAqB,CAAC;aACtD,CAAC,CAAC;SACJ;aAAM;YACL,+CAAsB,CAAC;gBACrB,MAAM,EAAE,4DAAkB;aAC3B,CAAC,CAAC;SACJ;IACH,CAAC;IAED,KAAK,CAAC,UAAU,EAAE,QAAQ;QACxB,OAAO,0CAAI,CAAC,yDAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CACpD,mDAAG,CAAC,CAAO,KAAK,EAAE,EAAE,CAAC;YACnB,YAAY,CAAC,OAAO,CAAC,+DAAqB,EAAE,KAAK,CAAC,CAAC;YAEnD,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,eAAe;YACjD,YAAY,CAAC,OAAO,CAAC,gEAAsB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,EAAC,EACF,yDAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAChC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,YAAY,CAAC,UAAU,CAAC,+DAAqB,CAAC,CAAC;IACjD,CAAC;IAED,QAAQ,CAAC,SAAS;QAChB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,4DAAkB,sBAAsB,EAAE;YACjD,SAAS;YACT,OAAO,EAAE,SAAS;SACnB,CAAC;aACD,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,cAAc,CAAC,WAAmB;QAChC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,GAAG,4DAAkB,2CAA2C,WAAW,EAAE,CAC9E;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,uBAAuB,CAAC,KAAa;QACnC,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,4DAAkB,uCAAuC,EAAE;YAClE,KAAK;SACN,CAAC;aACD,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,cAAc,CAAC,WAAmB,EAAE,QAAgB;QAClD,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,4DAAkB,6BAA6B,EAAE;YACxD,WAAW;YACX,QAAQ;SACT,CAAC;aACD,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,WAAW,CAAC,WAAmB,EAAE,KAAa;QAC5C,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,4DAAkB,0BAA0B,EAAE;YACrD,WAAW;YACX,KAAK;SACN,CAAC;aACD,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,cAAc;QACZ,OAAO,YAAY,CAAC,OAAO,CAAC,+DAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACpE,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,+DAAqB,CAAC,CAAC,CAAC;IACvE,CAAC;IAEO,WAAW,CAAC,KAAK;QACvB,IAAI,KAAK;YAAE,OAAO,mDAAU,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,2DAA2D;IAC3D,OAAO,CAAC,QAAiB,KAAK;QAC5B,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,KAAK;YAAE,OAAO,wCAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1D,OAAO,wCAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CACnC,yDAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAClB,KAAK;YACH,CAAC,CAAC,gDAAuB,CAAC;gBACtB,WAAW,EAAE,EAAE,MAAM,EAAE,EAAE,WAAW,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE;aACpD,CAAC;YACJ,CAAC,CAAC,wCAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CACf,EACD,mDAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxB,mDAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CACxC,CAAC;IACJ,CAAC;IAED,oBAAoB,CAAC,UAAU,EAAE,QAAQ;QACvC,OAAO,yDAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,eAAe;QACb,IAAI,MAAM,GAAY,IAAI,CAAC;QAC3B,IACE,YAAY,CAAC,OAAO,CAAC,gEAAsB,CAAC;YAC5C,IAAI,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,gEAAsB,CAAC,CAAC;YAEnE,MAAM,GAAG,KAAK,CAAC;QACjB,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;IACpB,CAAC;CACF;;YA1IQ,6DAAU;;AAMN,WAAW;IAHvB,0DAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAoIvB;AApIuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZuB;AAC/C;;;GAGG;AACI,SAAS,UAAU,CACxB,GAAG,WAAiD;IAEpD,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,qDAAqD,CAAC;IACjF,4DAAiB,CAAC,GAAG,WAAW,CAAC,CAAC;AACpC,CAAC;AAyBM,IAAU,IAAI,CAuDpB;AAvDD,WAAiB,IAAI;IACnB,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAY,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACxD,CAAC;IAFe,QAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAY,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC3D,CAAC;IAFe,WAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA2B;QACjD,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACjC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,WAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAmB;QACzC,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACjC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,WAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAA4B;QAE5B,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACjC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,UAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,WAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAY,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACjE,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAY,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACpE,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,aAAQ,KAAR,aAAQ,QAOxB;AACH,CAAC,EAvDgB,IAAI,KAAJ,IAAI,QAuDpB;AAeM,IAAU,OAAO,CAuDvB;AAvDD,WAAiB,OAAO;IACtB,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAe,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC3D,CAAC;IAFe,WAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAe,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC9D,CAAC;IAFe,cAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA8B;QACpD,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,cAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAsB;QAC5C,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,cAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAA+B;QAE/B,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,aAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,cAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAe,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACpE,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAe,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACvE,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAOxB;AACH,CAAC,EAvDgB,OAAO,KAAP,OAAO,QAuDvB;AAOM,IAAU,YAAY,CAuD5B;AAvDD,WAAiB,YAAY;IAC3B,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAoB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAChE,CAAC;IAFe,gBAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAoB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACnE,CAAC;IAFe,mBAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAmC;QACzD,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC3B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,mBAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA2B;QACjD,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC3B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,mBAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAAoC;QAEpC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC3B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,kBAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,mBAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAoB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACzE,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAoB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC5E,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,qBAAQ,KAAR,qBAAQ,QAOxB;AACH,CAAC,EAvDgB,YAAY,KAAZ,YAAY,QAuD5B;AAeM,IAAU,KAAK,CAuDrB;AAvDD,WAAiB,KAAK;IACpB,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAa,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACzD,CAAC;IAFe,SAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAa,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC5D,CAAC;IAFe,YAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA4B;QAClD,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACvC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,YAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAoB;QAC1C,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACvC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,YAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAA6B;QAE7B,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACvC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,WAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,YAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAa,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAClE,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAa,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACrE,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,cAAQ,KAAR,cAAQ,QAOxB;AACH,CAAC,EAvDgB,KAAK,KAAL,KAAK,QAuDrB;AAcM,IAAU,YAAY,CAuD5B;AAvDD,WAAiB,YAAY;IAC3B,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAoB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAChE,CAAC;IAFe,gBAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAoB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACnE,CAAC;IAFe,mBAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAmC;QACzD,CAAC,MAAM,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACnC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,mBAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA2B;QACjD,CAAC,MAAM,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACnC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,mBAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAAoC;QAEpC,CAAC,MAAM,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACnC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,kBAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,mBAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAoB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACzE,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAoB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC5E,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,qBAAQ,KAAR,qBAAQ,QAOxB;AACH,CAAC,EAvDgB,YAAY,KAAZ,YAAY,QAuD5B;AAaM,IAAU,cAAc,CAqC9B;AArCD,WAAiB,cAAc;IAC7B,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAsB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAClE,CAAC;IAFe,kBAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAsB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACrE,CAAC;IAFe,qBAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAqC;QAE3D,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IAHe,qBAAM,SAGrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA6B;QAEnD,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAPe,qBAAM,SAOrB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAAsC;QAGtC,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IALe,oBAAK,QAKpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,qBAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAsB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC3E,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAsB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC9E,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,uBAAQ,KAAR,uBAAQ,QAOxB;AACH,CAAC,EArCgB,cAAc,KAAd,cAAc,QAqC9B;AAgBM,IAAU,WAAW,CAuD3B;AAvDD,WAAiB,WAAW;IAC1B,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAmB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC/D,CAAC;IAFe,eAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAmB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAClE,CAAC;IAFe,kBAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAkC;QACxD,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACnC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,kBAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA0B;QAChD,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACnC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,kBAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAAmC;QAEnC,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACnC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,iBAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,kBAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAmB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACxE,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAmB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC3E,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,oBAAQ,KAAR,oBAAQ,QAOxB;AACH,CAAC,EAvDgB,WAAW,KAAX,WAAW,QAuD3B;AASM,IAAU,aAAa,CAuD7B;AAvDD,WAAiB,aAAa;IAC5B,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAqB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACjE,CAAC;IAFe,iBAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAqB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACpE,CAAC;IAFe,oBAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAoC;QAC1D,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACjC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,oBAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA4B;QAClD,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACjC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,oBAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAAqC;QAErC,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACjC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,mBAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,oBAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAqB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC1E,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAqB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC7E,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,sBAAQ,KAAR,sBAAQ,QAOxB;AACH,CAAC,EAvDgB,aAAa,KAAb,aAAa,QAuD7B;AASM,IAAU,kBAAkB,CAuDlC;AAvDD,WAAiB,kBAAkB;IACjC,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAA0B,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACtE,CAAC;IAFe,sBAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAA0B,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACzE,CAAC;IAFe,yBAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAyC;QAC/D,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,yBAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAiC;QACvD,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,yBAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAA0C;QAE1C,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,wBAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,yBAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAA0B,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAC/E,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAA0B,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QAClF,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,2BAAQ,KAAR,2BAAQ,QAOxB;AACH,CAAC,EAvDgB,kBAAkB,KAAlB,kBAAkB,QAuDlC;AAUM,IAAU,QAAQ,CAuDxB;AAvDD,WAAiB,QAAQ;IACvB,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAgB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC5D,CAAC;IAFe,YAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAgB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC/D,CAAC;IAFe,eAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA+B;QACrD,CAAC,QAAQ,EAAC,SAAS,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5C,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IATe,eAAM,SASrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAuB;QAC7C,CAAC,QAAQ,EAAC,SAAS,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5C,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAbe,eAAM,SAarB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAAgC;QAEhC,CAAC,QAAQ,EAAC,SAAS,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5C,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBACtC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACxC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAXe,cAAK,QAWpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,eAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAgB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACrE,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAgB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACxE,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,iBAAQ,KAAR,iBAAQ,QAOxB;AACH,CAAC,EAvDgB,QAAQ,KAAR,QAAQ,QAuDxB;AAQM,IAAU,QAAQ,CAqCxB;AArCD,WAAiB,QAAQ;IACvB,MAAM,SAAS,GAAG,0BAA0B,CAAC;IAC3C,SAAgB,GAAG,CAAE,GAAG,IAAa;QACnC,OAAO,0DAAe,CAAgB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC5D,CAAC;IAFe,YAAG,MAElB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,GAAG,IAAgB;QACzC,OAAO,6DAAkB,CAAgB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC/D,CAAC;IAFe,eAAM,SAErB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAA+B;QAErD,OAAO,6DAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IAHe,eAAM,SAGrB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,QAAuB;QAE7C,OAAO,6DAAkB,CACvB,SAAS,EACT,QAAQ,CAAC,GAAG,EACZ,QAAQ,CACT,CAAC;IACJ,CAAC;IAPe,eAAM,SAOrB;IAAA,CAAC;IACF,SAAgB,KAAK,CACnB,QAAgC;QAGhC,OAAO,4DAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IALe,cAAK,QAKpB;IAAA,CAAC;IACF,SAAgB,MAAM,CAAE,UAAkB;QACxC,OAAO,6DAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAFe,eAAM,SAErB;IAAA,CAAC;IACJ,IAAiB,QAAQ,CAOxB;IAPD,WAAiB,QAAQ;QACrB,SAAgB,GAAG,CAAE,GAAG,IAAqB;YAC3C,OAAO,mEAAwB,CAAgB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACrE,CAAC;QAFe,YAAG,MAElB;QAAA,CAAC;QACF,SAAgB,MAAM,CAAE,GAAG,IAAwB;YACjD,OAAO,sEAA2B,CAAgB,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;QACxE,CAAC;QAFe,eAAM,SAErB;QAAA,CAAC;IACN,CAAC,EAPgB,QAAQ,GAAR,iBAAQ,KAAR,iBAAQ,QAOxB;AACH,CAAC,EArCgB,QAAQ,KAAR,QAAQ,QAqCxB;;;;;;;;;;;;;;;;AChtBM,MAAM,WAAW,GAAG;IACzB,MAAM,EAAE,qDAAqD;IAC7D,MAAM,EAAE,kBAAkB;IAC1B,oBAAoB,EAAE,iBAAiB;IACvC,SAAS,EAAE,qBAAqB;IAChC,UAAU,EAAE,sBAAsB;IAClC,IAAI,EAAE,0BAA0B;CACjC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACPwB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,wBAAwB,yCAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B,+BAA+B,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,mDAAmD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C,sBAAsB,gBAAgB,WAAW,WAAW,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB,GAAG,GAAG;AAClD;AACA,gCAAgC;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,4BAA4B,gBAAgB,GAAG,GAAG;AAClD;AACA;AACA;AACA,+BAA+B,gBAAgB,GAAG,GAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB,GAAG,WAAW,UAAU,SAAS,KAAK;AAC9E;AACA;AACA,iEAAiE,SAAS;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB,GAAG,WAAW,UAAU,SAAS;AAC5E;AACA;AACA,iEAAiE,SAAS;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;;AAE8E;AACvG","file":"default-src_app_fitness_services_auth_service_ts.js","sourcesContent":["function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import { Injectable } from '@angular/core';\nimport * as identity from '@spica-devkit/identity';\nimport * as DataService from './bucket';\nimport jwt_decode from 'jwt-decode';\nimport { from, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  activeUser: DataService.User;\n  activeToken: string;\n\n  constructor(private http: HttpClient) {\n    DataService.initialize({ apikey: environment.apikey });\n    identity.initialize({\n      publicUrl: environment.apiUrl,\n      apikey: environment.apikey,\n    });\n  }\n\n  initBucket() {\n    let tokenExpire = localStorage.getItem(environment.EXPIRE_KEY);\n    if (tokenExpire && new Date(tokenExpire) < new Date()) {\n      localStorage.clear();\n    }\n    if (localStorage.getItem(environment.TOKEN_KEY)) {\n      DataService.initialize({\n        identity: localStorage.getItem(environment.TOKEN_KEY),\n      });\n    } else {\n      DataService.initialize({\n        apikey: environment.apikey,\n      });\n    }\n  }\n\n  login(identifier, password) {\n    return from(identity.login(identifier, password)).pipe(\n      tap(async (token) => {\n        localStorage.setItem(environment.TOKEN_KEY, token);\n\n        let date = new Date();\n        date.setDate(date.getDate() + 2); // 2 days later\n        localStorage.setItem(environment.EXPIRE_KEY, String(date));\n        this.activeToken = token;\n      }),\n      switchMap(() => this.getUser())\n    );\n  }\n\n  logout() {\n    this.activeUser = undefined;\n    localStorage.removeItem(environment.TOKEN_KEY);\n  }\n\n  register(user_data) {\n    return this.http\n      .post(`${environment.apiUrl}/fn-execute/register`, {\n        user_data,\n        project: 'FITNESS',\n      })\n      .toPromise();\n  }\n\n  forgotPassword(identity_id: string) {\n    return this.http\n      .get(\n        `${environment.apiUrl}/fn-execute/forgot-password?identity_id=${identity_id}`\n      )\n      .toPromise();\n  }\n\n  sendForgotPasswordEmail(email: string) {\n    return this.http\n      .post(`${environment.apiUrl}/fn-execute/sendMailForForgotPassword`, {\n        email,\n      })\n      .toPromise();\n  }\n\n  changePassword(identity_id: string, password: string) {\n    return this.http\n      .post(`${environment.apiUrl}/fn-execute/change-password`, {\n        identity_id,\n        password,\n      })\n      .toPromise();\n  }\n\n  changeEmail(identity_id: string, email: string) {\n    return this.http\n      .post(`${environment.apiUrl}/fn-execute/change-email`, {\n        identity_id,\n        email,\n      })\n      .toPromise();\n  }\n\n  isUserLoggedIn(): boolean {\n    return localStorage.getItem(environment.TOKEN_KEY) ? true : false;\n  }\n\n  getActiveToken(): any {\n    return this.tokenDecode(localStorage.getItem(environment.TOKEN_KEY));\n  }\n\n  private tokenDecode(token) {\n    if (token) return jwt_decode(token);\n    return false;\n  }\n\n  //Gets user info after taking token stored in local storage\n  getUser(clean: boolean = false): Observable<DataService.User> {\n    if (this.activeUser && !clean) return of(this.activeUser);\n    return of(this.getActiveToken()).pipe(\n      switchMap((token) =>\n        token\n          ? DataService.user.getAll({\n              queryParams: { filter: { identity_id: token._id } },\n            })\n          : of([null])\n      ),\n      map((users) => users[0]),\n      tap((user) => (this.activeUser = user))\n    );\n  }\n\n  checkCurrentPassword(identifier, password) {\n    return identity.login(identifier, password);\n  }\n\n  isAuthenticated(): Observable<boolean> {\n    let result: boolean = true;\n    if (\n      localStorage.getItem(environment.EXPIRE_KEY) &&\n      new Date() > new Date(localStorage.getItem(environment.EXPIRE_KEY))\n    )\n      result = false;\n    return of(result);\n  }\n}\n","import * as Bucket from '@spica-devkit/bucket';\n/**\n * Call this method before interacting with buckets.\n * @param initOptions Initialize options to initialize the '@spica-devkit/bucket'.\n */\nexport function initialize(\n  ...initOptions: Parameters<typeof Bucket.initialize>\n) {\n  initOptions[0].publicUrl = 'https://spica-starters-7229b.hq.spicaengine.com/api';\n  Bucket.initialize(...initOptions);\n}\n\ntype Rest<T extends any[]> = ((...p: T) => void) extends ((p1: infer P1, ...rest: infer R) => void) ? R : never;\ntype getArgs = Rest<Parameters<typeof Bucket.data.get>>;\ntype getAllArgs = Rest<Parameters<typeof Bucket.data.getAll>>;\ntype realtimeGetArgs = Rest<Parameters<typeof Bucket.data.realtime.get>>;\ntype realtimeGetAllArgs = Rest<Parameters<typeof Bucket.data.realtime.getAll>>;\ntype id = { _id: string };\n\nexport interface User{\n  _id?: string;\n  name?: string;\n  surname?: string;\n  gender?: ('male'|'female'|'other');\n  vip?: boolean;\n  birthdate?: Date | string;\n  created_at?: Date | string;\n  phone_number?: string;\n  mail?: string;\n  identity_id?: string;\n  image?: string;\n  membership_level?: ('bronze'|'silver'|'gold');\n  is_member?: boolean;\n  buyed_videos?: (Video & id | string)[];\n}\nexport namespace user {\n  const BUCKET_ID = '61b8add7d6bd39002e9262ed';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<User & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<User & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<User, \"_id\">) {\n      ['buyed_videos'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: User & id) {\n      ['buyed_videos'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<User> & id\n    ) {\n      ['buyed_videos'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<User & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<User & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Teacher{\n  _id?: string;\n  name?: string;\n  surname?: string;\n  mail?: string;\n  phone_number?: string;\n  gender?: ('male'|'female'|'other');\n  picture?: string;\n  birthday?: Date | string;\n  created_at?: Date | string;\n  speciality?: (Teacher_Speciality & id | string)[];\n  biography?: string;\n}\nexport namespace teacher {\n  const BUCKET_ID = '61b8add9d6bd39002e9262f0';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Teacher & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Teacher & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Teacher, \"_id\">) {\n      ['speciality'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Teacher & id) {\n      ['speciality'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Teacher> & id\n    ) {\n      ['speciality'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Teacher & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Teacher & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Video_Packet{\n  _id?: string;\n  name?: string;\n  videos?: (Video & id | string)[];\n}\nexport namespace video_packet {\n  const BUCKET_ID = '61b8addad6bd39002e9262f3';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Video_Packet & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Video_Packet & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Video_Packet, \"_id\">) {\n      ['videos'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Video_Packet & id) {\n      ['videos'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Video_Packet> & id\n    ) {\n      ['videos'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Video_Packet & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Video_Packet & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Video{\n  _id?: string;\n  name?: string;\n  image?: string;\n  duration?: number;\n  video?: string;\n  upload_date?: Date | string;\n  category?: (Category & id | string);\n  teacher?: (Teacher & id | string);\n  description?: string;\n  permissions?: ('bronze'|'silver'|'gold')[];\n  price?: number;\n}\nexport namespace video {\n  const BUCKET_ID = '61b8addcd6bd39002e9262f9';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Video & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Video & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Video, \"_id\">) {\n      ['category','teacher'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Video & id) {\n      ['category','teacher'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Video> & id\n    ) {\n      ['category','teacher'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Video & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Video & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Food_Program{\n  _id?: string;\n  name?: string;\n  user?: (User & id | string);\n  teacher?: (Teacher & id | string);\n  created_at?: Date | string;\n  days?: {\n  day_of_week?: (1|2|3|4|5|6|7);\n  meal?: {\n  description?: string;\n  number_of_meal?: number;}[];}[];\n}\nexport namespace food_program {\n  const BUCKET_ID = '61b8addbd6bd39002e9262f6';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Food_Program & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Food_Program & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Food_Program, \"_id\">) {\n      ['user','teacher'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Food_Program & id) {\n      ['user','teacher'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Food_Program> & id\n    ) {\n      ['user','teacher'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Food_Program & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Food_Program & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Weekly_Program{\n  _id?: string;\n  name?: string;\n  days?: {\n  day_of_week?: string;\n  hours?: {\n  from?: string;\n  until?: string;\n  description?: string;}[];}[];\n  created_at?: Date | string;\n}\nexport namespace weekly_program {\n  const BUCKET_ID = '61b8added6bd39002e9262ff';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Weekly_Program & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Weekly_Program & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Weekly_Program, \"_id\">) {\n      \n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Weekly_Program & id) {\n      \n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Weekly_Program> & id\n    ) {\n      \n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Weekly_Program & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Weekly_Program & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Performance{\n  _id?: string;\n  title?: string;\n  teacher?: (Teacher & id | string);\n  user?: (User & id | string);\n  created_at?: Date | string;\n  metrics?: {\n  left_arm?: string;\n  right_arm?: string;\n  right_leg?: string;\n  left_leg?: string;\n  shoulders?: string;\n  weight?: string;};\n}\nexport namespace performance {\n  const BUCKET_ID = '61b8addfd6bd39002e926302';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Performance & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Performance & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Performance, \"_id\">) {\n      ['teacher','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Performance & id) {\n      ['teacher','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Performance> & id\n    ) {\n      ['teacher','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Performance & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Performance & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Watched_Video{\n  _id?: string;\n  name?: string;\n  video?: (Video & id | string);\n  watched_date?: Date | string;\n  user?: (User & id | string);\n}\nexport namespace watched_video {\n  const BUCKET_ID = '61b8ade3d6bd39002e92630b';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Watched_Video & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Watched_Video & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Watched_Video, \"_id\">) {\n      ['video','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Watched_Video & id) {\n      ['video','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Watched_Video> & id\n    ) {\n      ['video','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Watched_Video & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Watched_Video & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Teacher_Speciality{\n  _id?: string;\n  name?: string;\n  description?: string;\n  categories?: (Category & id | string)[];\n  img?: string;\n}\nexport namespace teacher_speciality {\n  const BUCKET_ID = '61b8ade2d6bd39002e926308';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Teacher_Speciality & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Teacher_Speciality & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Teacher_Speciality, \"_id\">) {\n      ['categories'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Teacher_Speciality & id) {\n      ['categories'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Teacher_Speciality> & id\n    ) {\n      ['categories'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Teacher_Speciality & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Teacher_Speciality & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Training{\n  _id?: string;\n  name?: string;\n  packet?: (Video_Packet & id | string);\n  teacher?: (Teacher & id | string);\n  user?: (User & id | string);\n  description?: string;\n}\nexport namespace training {\n  const BUCKET_ID = '61b8ade1d6bd39002e926305';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Training & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Training & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Training, \"_id\">) {\n      ['packet','teacher','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Training & id) {\n      ['packet','teacher','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Training> & id\n    ) {\n      ['packet','teacher','user'].forEach((field) => {\n        if (typeof document[field] == 'object') {\n          document[field] = Array.isArray(document[field])\n            ? document[field].map((v) => v._id || v)\n            : document[field]._id;\n        }\n      });\n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Training & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Training & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n\nexport interface Category{\n  _id?: string;\n  name?: string;\n  description?: string;\n  img?: string;\n}\nexport namespace category {\n  const BUCKET_ID = '61b8adddd6bd39002e9262fc';\n    export function get (...args: getArgs) {\n      return Bucket.data.get<Category & id>(BUCKET_ID, ...args);\n    };\n    export function getAll (...args: getAllArgs) {\n      return Bucket.data.getAll<Category & id>(BUCKET_ID, ...args);\n    };\n    export function insert (document: Omit<Category, \"_id\">) {\n      \n      return Bucket.data.insert(BUCKET_ID, document);\n    };\n    export function update (document: Category & id) {\n      \n      return Bucket.data.update(\n        BUCKET_ID,\n        document._id,\n        document\n      );\n    };  \n    export function patch (\n      document: Partial<Category> & id\n    ) {\n      \n      return Bucket.data.patch(BUCKET_ID, document._id, document);\n    };  \n    export function remove (documentId: string) {\n      return Bucket.data.remove(BUCKET_ID, documentId);\n    };\n  export namespace realtime {\n      export function get (...args: realtimeGetArgs) {\n        return Bucket.data.realtime.get<Category & id>(BUCKET_ID, ...args);\n      };\n      export function getAll (...args: realtimeGetAllArgs) {\n        return Bucket.data.realtime.getAll<Category & id>(BUCKET_ID, ...args);\n      };\n  }\n}\n","export const environment = {\n  apiUrl: 'https://spica-starters-7229b.hq.spicaengine.com/api',\n  apikey: 'axfb9k1akx06fe2u',\n  identity_read_apikey: '1dsp51bkvs0vuva',\n  TOKEN_KEY: 'fitness_spica_token',\n  EXPIRE_KEY: 'fitness_spica_expire',\n  user: \"618b75295ee9b9002f154683\",\n};\n","import axios from 'axios';\n\nfunction logWarning(response) {\n    const warning = response.headers[\"warning\"];\n    if (warning) {\n        console.warn(warning);\n    }\n}\nclass Axios {\n    constructor(config) {\n        this.interceptors = {\n            request: {\n                onFulfilled: (request) => {\n                    if (!request.headers[\"Authorization\"]) {\n                        throw new Error(\"You should call initialize method with a valid apikey or identity token.\");\n                    }\n                    return request;\n                },\n                onRejected: (error) => {\n                    return Promise.reject(error);\n                }\n            },\n            response: {\n                onFulfilled: (response) => {\n                    logWarning(response);\n                    return response.data;\n                },\n                onRejected: (error) => {\n                    return Promise.reject(error.response ? error.response.data : error);\n                }\n            }\n        };\n        this.instance = axios.create(config);\n        this.instance.interceptors.request.use(this.interceptors.request.onFulfilled, this.interceptors.request.onRejected);\n        this.instance.interceptors.response.use(this.interceptors.response.onFulfilled, this.interceptors.response.onRejected);\n        this.baseUrl = this.instance.defaults.baseURL;\n    }\n    setBaseUrl(url) {\n        this.instance.defaults.baseURL = url;\n    }\n    setWriteDefaults(writeDefaults) {\n        for (const [header, value] of Object.entries(writeDefaults.headers)) {\n            this.instance.defaults.headers.post[header] = value;\n            this.instance.defaults.headers.put[header] = value;\n        }\n    }\n    setAuthorization(authorization) {\n        this.instance.defaults.headers[\"Authorization\"] = authorization;\n    }\n    get(url, config) {\n        return this.instance.get(url, config);\n    }\n    post(url, body, config) {\n        return this.instance.post(url, body, config);\n    }\n    put(url, body, config) {\n        return this.instance.put(url, body, config);\n    }\n    patch(url, body, config) {\n        return this.instance.patch(url, body, config);\n    }\n    delete(url, config) {\n        return this.instance.delete(url, config);\n    }\n}\n\nlet service;\nfunction initialize(options) {\n    let authorization;\n    if (\"apikey\" in options) {\n        authorization = `APIKEY ${options.apikey}`;\n    }\n    else if (\"identity\" in options) {\n        authorization = `IDENTITY ${options.identity}`;\n    }\n    checkInitialized(authorization);\n    const publicUrl = options.publicUrl || getPublicUrl();\n    if (!publicUrl) {\n        throw new Error(\"Public url must be provided.\");\n    }\n    if (!service) {\n        service = new Axios({ baseURL: publicUrl, headers: { Authorization: authorization } });\n    }\n    else {\n        service.setBaseUrl(publicUrl);\n        service.setAuthorization(authorization);\n    }\n    return { authorization, publicUrl, service };\n}\nfunction checkInitialized(authorization) {\n    if (!authorization) {\n        throw new Error(\"You should call initialize method with a valid apikey or identity token.\");\n    }\n}\nfunction getPublicUrl() {\n    return isPlatformBrowser() ? undefined : process.env.__INTERNAL__SPICA__PUBLIC_URL__;\n}\nfunction isPlatformBrowser() {\n    return typeof window !== \"undefined\";\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nlet authorization;\nlet service$1;\nconst identitySegment = \"passport/identity\";\nfunction initialize$1(options) {\n    const { authorization: _authorization, service: _service } = initialize(options);\n    authorization = _authorization;\n    service$1 = _service;\n    service$1.setWriteDefaults({\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\nfunction verifyToken(token, baseUrl) {\n    const _baseUrl = baseUrl ? baseUrl : service$1 ? service$1.baseUrl : undefined;\n    if (!_baseUrl) {\n        throw new Error(\"You should pass the base url of the server or call the initialize method.\");\n    }\n    const req = new Axios({ baseURL: _baseUrl });\n    return req.get(`${identitySegment}/verify`, { headers: { Authorization: token } });\n}\nfunction login(identifier, password, tokenLifeSpan) {\n    checkInitialized(authorization);\n    return service$1\n        .post(\"/passport/identify\", {\n        identifier,\n        password,\n        expires: tokenLifeSpan\n    })\n        .then(response => response.token);\n}\nfunction get(id) {\n    checkInitialized(authorization);\n    return service$1.get(`${identitySegment}/${id}`);\n}\nfunction getAll(queryParams = {}) {\n    checkInitialized(authorization);\n    return service$1.get(identitySegment, {\n        params: queryParams\n    });\n}\nfunction insert(identity) {\n    return __awaiter(this, void 0, void 0, function* () {\n        checkInitialized(authorization);\n        const insertedIdentity = yield service$1.post(identitySegment, identity);\n        return policy.attach(insertedIdentity._id, identity.policies).then(policies => {\n            insertedIdentity.policies = policies;\n            return insertedIdentity;\n        });\n    });\n}\nfunction update(id, identity) {\n    checkInitialized(authorization);\n    return service$1.put(`${identitySegment}/${id}`, identity);\n}\nfunction remove(id) {\n    checkInitialized(authorization);\n    return service$1.delete(`${identitySegment}/${id}`);\n}\n// policy attach detach\nvar policy;\n(function (policy) {\n    function attach(identityId, policyIds = []) {\n        checkInitialized(authorization);\n        const promises = [];\n        const attachedPolicies = new Set();\n        for (const policyId of policyIds) {\n            const promise = service$1\n                .put(`${identitySegment}/${identityId}/policy/${policyId}`, {})\n                .then(() => attachedPolicies.add(policyId))\n                .catch(e => {\n                console.error(`Failed to attach policy with id ${policyId}: `, e);\n                return e;\n            });\n            promises.push(promise);\n        }\n        return Promise.all(promises).then(() => Array.from(attachedPolicies));\n    }\n    policy.attach = attach;\n    function detach(identityId, policyIds = []) {\n        checkInitialized(authorization);\n        const promises = [];\n        const detachedPolicies = new Set();\n        for (const policyId of policyIds) {\n            const promise = service$1\n                .delete(`${identitySegment}/${identityId}/policy/${policyId}`)\n                .then(() => detachedPolicies.add(policyId))\n                .catch(e => {\n                console.error(`Failed to detach policy with id ${policyId}: `, e);\n                return e;\n            });\n            promises.push(promise);\n        }\n        return Promise.all(promises).then(() => Array.from(detachedPolicies));\n    }\n    policy.detach = detach;\n})(policy || (policy = {}));\n\nexport { get, getAll, initialize$1 as initialize, insert, login, policy, remove, update, verifyToken };\n//# sourceMappingURL=index.mjs.map\n"],"sourceRoot":"webpack:///"}