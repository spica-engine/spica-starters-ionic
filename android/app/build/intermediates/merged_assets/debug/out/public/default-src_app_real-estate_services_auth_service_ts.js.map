{"version":3,"sources":["./src/app/real-estate/services/auth.service.ts","./src/app/real-estate/services/bucket.ts","./src/app/real-estate/services/environment.ts","./node_modules/@spica-devkit/identity/dist/index.mjs"],"names":[],"mappings":"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C;QAFe,eAAM,SAErB;IACH,CAAC,EAPgB,QAAQ,GAAR,iBAAQ,KAAR,iBAAQ,QAOxB;AACH,CAAC,EA5BgB,QAAQ,KAAR,QAAQ,QA4BxB;;;;;;;;;;;;;;;;AC3TM,MAAM,WAAW,GAAG;IACzB,MAAM,EAAE,qDAAqD;IAC7D,MAAM,EAAE,kBAAkB;IAC1B,QAAQ,EAAG,8EAA8E;IACzF,aAAa,EAAE,yEAAyE;IACxF,SAAS,EAAE,6BAA6B;IACxC,UAAU,EAAE,8BAA8B;CAC3C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACPwB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,wBAAwB,yCAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B,+BAA+B,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,mDAAmD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C,sBAAsB,gBAAgB,WAAW,WAAW,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB,GAAG,GAAG;AAClD;AACA,gCAAgC;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,4BAA4B,gBAAgB,GAAG,GAAG;AAClD;AACA;AACA;AACA,+BAA+B,gBAAgB,GAAG,GAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB,GAAG,WAAW,UAAU,SAAS,KAAK;AAC9E;AACA;AACA,iEAAiE,SAAS;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB,GAAG,WAAW,UAAU,SAAS;AAC5E;AACA;AACA,iEAAiE,SAAS;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;;AAE8E;AACvG","file":"default-src_app_real-estate_services_auth_service_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport * as identity from '@spica-devkit/identity';\nimport * as DataService from './bucket';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  activeToken: string;\n\n  constructor(private http: HttpClient) {\n    DataService.initialize({ apikey: environment.apikey });\n    identity.initialize({\n      publicUrl: environment.apiUrl,\n      apikey: environment.apikey,\n    });\n  }\n\n  initBucket() {\n    let tokenExpire = localStorage.getItem(environment.EXPIRE_KEY);\n    if (tokenExpire && new Date(tokenExpire) < new Date()) {\n      localStorage.clear();\n    }\n    if (localStorage.getItem(environment.TOKEN_KEY)) {\n      DataService.initialize({\n        identity: localStorage.getItem(environment.TOKEN_KEY),\n      });\n    } else {\n      DataService.initialize({\n        apikey: environment.apikey,\n      });\n    }\n  }\n}\n","import * as Bucket from '@spica-devkit/bucket';\n/**\n * Call this method before interacting with buckets.\n * @param initOptions Initialize options to initialize the '@spica-devkit/bucket'.\n */\nexport function initialize(\n  ...initOptions: Parameters<typeof Bucket.initialize>\n) {\n  initOptions[0].publicUrl =\n    'https://spica-starters-7229b.hq.spicaengine.com/api';\n  Bucket.initialize(...initOptions);\n}\n\ntype Rest<T extends any[]> = ((...p: T) => void) extends (\n  p1: infer P1,\n  ...rest: infer R\n) => void\n  ? R\n  : never;\ntype getArgs = Rest<Parameters<typeof Bucket.data.get>>;\ntype getAllArgs = Rest<Parameters<typeof Bucket.data.getAll>>;\ntype realtimeGetArgs = Rest<Parameters<typeof Bucket.data.realtime.get>>;\ntype realtimeGetAllArgs = Rest<Parameters<typeof Bucket.data.realtime.getAll>>;\ntype id = { _id: string };\n\nexport interface Adverst {\n  _id?: string;\n  adverst_no?: number;\n  name?: string;\n  description?: string;\n  square_meters?: string;\n  room_count?: string;\n  warming_type?: 'furnace' | 'boiler' | 'gas-fired' | 'electric';\n  adverst_status?: 'rent' | 'sale';\n  livingroom_count?: string;\n  fuel_type?: 'coal' | 'gas' | 'wood' | 'electric';\n  staff_no?: string;\n  building_age?: string;\n  bathroom_count?: string;\n  trade?: boolean;\n  bedroom_count?: string;\n  address?: {\n    country?: string;\n    district?: string;\n    city?: string;\n  };\n  location?: { type: 'Point'; coordinates: [number, number] };\n  created_at?: Date | string;\n  consultant?: (Consultant & id) | string;\n  properties?: {\n    exterior?: string[];\n    interior?: string[];\n    environmental?: string[];\n  };\n  categories?: ((Category & id) | string)[];\n  cover_img?: string;\n  images?: string[];\n  price?: number;\n  currency?: 'EUR' | 'GBP' | 'USD';\n}\nexport namespace adverst {\n  const BUCKET_ID = '61b9f84cd6bd39002e927a71';\n  export function get(...args: getArgs) {\n    return Bucket.data.get<Adverst & id>(BUCKET_ID, ...args);\n  }\n  export function getAll(...args: getAllArgs) {\n    return Bucket.data.getAll<Adverst & id>(BUCKET_ID, ...args);\n  }\n  export function insert(document: Omit<Adverst, '_id'>) {\n    ['consultant', 'categories'].forEach((field) => {\n      if (typeof document[field] == 'object') {\n        document[field] = Array.isArray(document[field])\n          ? document[field].map((v) => v._id)\n          : document[field]._id;\n      }\n    });\n    return Bucket.data.insert(BUCKET_ID, document);\n  }\n  export function update(document: Adverst & id) {\n    ['consultant', 'categories'].forEach((field) => {\n      if (typeof document[field] == 'object') {\n        document[field] = Array.isArray(document[field])\n          ? document[field].map((v) => v._id)\n          : document[field]._id;\n      }\n    });\n    return Bucket.data.update(BUCKET_ID, document._id, document);\n  }\n  export function patch(document: Partial<Adverst> & id) {\n    ['consultant', 'categories'].forEach((field) => {\n      if (typeof document[field] == 'object') {\n        document[field] = Array.isArray(document[field])\n          ? document[field].map((v) => v._id)\n          : document[field]._id;\n      }\n    });\n    return Bucket.data.patch(BUCKET_ID, document._id, document);\n  }\n  export function remove(documentId: string) {\n    return Bucket.data.remove(BUCKET_ID, documentId);\n  }\n  export namespace realtime {\n    export function get(...args: realtimeGetArgs) {\n      return Bucket.data.realtime.get<Adverst & id>(BUCKET_ID, ...args);\n    }\n    export function getAll(...args: realtimeGetAllArgs) {\n      return Bucket.data.realtime.getAll<Adverst & id>(BUCKET_ID, ...args);\n    }\n  }\n}\n\nexport interface Usefull_Link {\n  _id?: string;\n  link?: string;\n  name?: string;\n}\nexport namespace usefull_link {\n  const BUCKET_ID = '61b9f84ed6bd39002e927a73';\n  export function get(...args: getArgs) {\n    return Bucket.data.get<Usefull_Link & id>(BUCKET_ID, ...args);\n  }\n  export function getAll(...args: getAllArgs) {\n    return Bucket.data.getAll<Usefull_Link & id>(BUCKET_ID, ...args);\n  }\n  export function insert(document: Omit<Usefull_Link, '_id'>) {\n    return Bucket.data.insert(BUCKET_ID, document);\n  }\n  export function update(document: Usefull_Link & id) {\n    return Bucket.data.update(BUCKET_ID, document._id, document);\n  }\n  export function patch(document: Partial<Usefull_Link> & id) {\n    return Bucket.data.patch(BUCKET_ID, document._id, document);\n  }\n  export function remove(documentId: string) {\n    return Bucket.data.remove(BUCKET_ID, documentId);\n  }\n  export namespace realtime {\n    export function get(...args: realtimeGetArgs) {\n      return Bucket.data.realtime.get<Usefull_Link & id>(BUCKET_ID, ...args);\n    }\n    export function getAll(...args: realtimeGetAllArgs) {\n      return Bucket.data.realtime.getAll<Usefull_Link & id>(BUCKET_ID, ...args);\n    }\n  }\n}\n\nexport interface Announcement {\n  _id?: string;\n  description?: string;\n  name?: string;\n  created_at?: Date;\n}\nexport namespace announcement {\n  const BUCKET_ID = '61b9f850d6bd39002e927a77';\n  export function get(...args: getArgs) {\n    return Bucket.data.get<Announcement & id>(BUCKET_ID, ...args);\n  }\n  export function getAll(...args: getAllArgs) {\n    return Bucket.data.getAll<Announcement & id>(BUCKET_ID, ...args);\n  }\n  export function insert(document: Omit<Announcement, '_id'>) {\n    return Bucket.data.insert(BUCKET_ID, document);\n  }\n  export function update(document: Announcement & id) {\n    return Bucket.data.update(BUCKET_ID, document._id, document);\n  }\n  export function patch(document: Partial<Announcement> & id) {\n    return Bucket.data.patch(BUCKET_ID, document._id, document);\n  }\n  export function remove(documentId: string) {\n    return Bucket.data.remove(BUCKET_ID, documentId);\n  }\n  export namespace realtime {\n    export function get(...args: realtimeGetArgs) {\n      return Bucket.data.realtime.get<Announcement & id>(BUCKET_ID, ...args);\n    }\n    export function getAll(...args: realtimeGetAllArgs) {\n      return Bucket.data.realtime.getAll<Announcement & id>(BUCKET_ID, ...args);\n    }\n  }\n}\n\nexport interface Consultant {\n  _id?: string;\n  name?: string;\n  surname?: string;\n  mail?: string;\n  phone_number?: string;\n  thumbnail?: string;\n}\nexport namespace consultant {\n  const BUCKET_ID = '61b9f849d6bd39002e927a6d';\n  export function get(...args: getArgs) {\n    return Bucket.data.get<Consultant & id>(BUCKET_ID, ...args);\n  }\n  export function getAll(...args: getAllArgs) {\n    return Bucket.data.getAll<Consultant & id>(BUCKET_ID, ...args);\n  }\n  export function insert(document: Omit<Consultant, '_id'>) {\n    return Bucket.data.insert(BUCKET_ID, document);\n  }\n  export function update(document: Consultant & id) {\n    return Bucket.data.update(BUCKET_ID, document._id, document);\n  }\n  export function patch(document: Partial<Consultant> & id) {\n    return Bucket.data.patch(BUCKET_ID, document._id, document);\n  }\n  export function remove(documentId: string) {\n    return Bucket.data.remove(BUCKET_ID, documentId);\n  }\n  export namespace realtime {\n    export function get(...args: realtimeGetArgs) {\n      return Bucket.data.realtime.get<Consultant & id>(BUCKET_ID, ...args);\n    }\n    export function getAll(...args: realtimeGetAllArgs) {\n      return Bucket.data.realtime.getAll<Consultant & id>(BUCKET_ID, ...args);\n    }\n  }\n}\n\nexport interface Category {\n  _id?: string;\n  name?: string;\n  sub_categories?: ((Category & id) | string)[];\n}\nexport namespace category {\n  const BUCKET_ID = '61b9f853d6bd39002e927a79';\n  export function get(...args: getArgs) {\n    return Bucket.data.get<Category & id>(BUCKET_ID, ...args);\n  }\n  export function getAll(...args: getAllArgs) {\n    return Bucket.data.getAll<Category & id>(BUCKET_ID, ...args);\n  }\n  export function insert(document: Omit<Category, '_id'>) {\n    ['sub_categories'].forEach((field) => {\n      if (typeof document[field] == 'object') {\n        document[field] = Array.isArray(document[field])\n          ? document[field].map((v) => v._id)\n          : document[field]._id;\n      }\n    });\n    return Bucket.data.insert(BUCKET_ID, document);\n  }\n  export function update(document: Category & id) {\n    ['sub_categories'].forEach((field) => {\n      if (typeof document[field] == 'object') {\n        document[field] = Array.isArray(document[field])\n          ? document[field].map((v) => v._id)\n          : document[field]._id;\n      }\n    });\n    return Bucket.data.update(BUCKET_ID, document._id, document);\n  }\n  export function patch(document: Partial<Category> & id) {\n    ['sub_categories'].forEach((field) => {\n      if (typeof document[field] == 'object') {\n        document[field] = Array.isArray(document[field])\n          ? document[field].map((v) => v._id)\n          : document[field]._id;\n      }\n    });\n    return Bucket.data.patch(BUCKET_ID, document._id, document);\n  }\n  export function remove(documentId: string) {\n    return Bucket.data.remove(BUCKET_ID, documentId);\n  }\n  export namespace realtime {\n    export function get(...args: realtimeGetArgs) {\n      return Bucket.data.realtime.get<Category & id>(BUCKET_ID, ...args);\n    }\n    export function getAll(...args: realtimeGetAllArgs) {\n      return Bucket.data.realtime.getAll<Category & id>(BUCKET_ID, ...args);\n    }\n  }\n}\n\nexport interface About_Us {\n  _id?: string;\n  about?: string;\n  offices?: {\n    address?: string;\n    email?: string;\n    phone?: string;\n    title?: string;\n    location?: { type: 'Point'; coordinates: [number, number] };\n  }[];\n}\nexport namespace about_us {\n  const BUCKET_ID = '61bc406b0ba24b002d1974cf';\n  export function get(...args: getArgs) {\n    return Bucket.data.get<About_Us & id>(BUCKET_ID, ...args);\n  }\n  export function getAll(...args: getAllArgs) {\n    return Bucket.data.getAll<About_Us & id>(BUCKET_ID, ...args);\n  }\n  export function insert(document: Omit<About_Us, '_id'>) {\n    return Bucket.data.insert(BUCKET_ID, document);\n  }\n  export function update(document: About_Us & id) {\n    return Bucket.data.update(BUCKET_ID, document._id, document);\n  }\n  export function patch(document: Partial<About_Us> & id) {\n    return Bucket.data.patch(BUCKET_ID, document._id, document);\n  }\n  export function remove(documentId: string) {\n    return Bucket.data.remove(BUCKET_ID, documentId);\n  }\n  export namespace realtime {\n    export function get(...args: realtimeGetArgs) {\n      return Bucket.data.realtime.get<About_Us & id>(BUCKET_ID, ...args);\n    }\n    export function getAll(...args: realtimeGetAllArgs) {\n      return Bucket.data.realtime.getAll<About_Us & id>(BUCKET_ID, ...args);\n    }\n  }\n}\n","export const environment = {\n  apiUrl: \"https://spica-starters-7229b.hq.spicaengine.com/api\",\n  apikey: \"axfb9k1akx06fe2u\",\n  user_img:  \"https://i.pinimg.com/originals/3f/94/70/3f9470b34a8e3f526dbdb022f9f19cf7.jpg\",\n  play_list_img: \"https://ak.picdn.net/shutterstock/videos/1027045601/thumb/1.jpg?ip=x480\",\n  TOKEN_KEY: 'music-streaming_spica_token',\n  EXPIRE_KEY: 'music-streaming_spica_expire',\n};","import axios from 'axios';\n\nfunction logWarning(response) {\n    const warning = response.headers[\"warning\"];\n    if (warning) {\n        console.warn(warning);\n    }\n}\nclass Axios {\n    constructor(config) {\n        this.interceptors = {\n            request: {\n                onFulfilled: (request) => {\n                    if (!request.headers[\"Authorization\"]) {\n                        throw new Error(\"You should call initialize method with a valid apikey or identity token.\");\n                    }\n                    return request;\n                },\n                onRejected: (error) => {\n                    return Promise.reject(error);\n                }\n            },\n            response: {\n                onFulfilled: (response) => {\n                    logWarning(response);\n                    return response.data;\n                },\n                onRejected: (error) => {\n                    return Promise.reject(error.response ? error.response.data : error);\n                }\n            }\n        };\n        this.instance = axios.create(config);\n        this.instance.interceptors.request.use(this.interceptors.request.onFulfilled, this.interceptors.request.onRejected);\n        this.instance.interceptors.response.use(this.interceptors.response.onFulfilled, this.interceptors.response.onRejected);\n        this.baseUrl = this.instance.defaults.baseURL;\n    }\n    setBaseUrl(url) {\n        this.instance.defaults.baseURL = url;\n    }\n    setWriteDefaults(writeDefaults) {\n        for (const [header, value] of Object.entries(writeDefaults.headers)) {\n            this.instance.defaults.headers.post[header] = value;\n            this.instance.defaults.headers.put[header] = value;\n        }\n    }\n    setAuthorization(authorization) {\n        this.instance.defaults.headers[\"Authorization\"] = authorization;\n    }\n    get(url, config) {\n        return this.instance.get(url, config);\n    }\n    post(url, body, config) {\n        return this.instance.post(url, body, config);\n    }\n    put(url, body, config) {\n        return this.instance.put(url, body, config);\n    }\n    patch(url, body, config) {\n        return this.instance.patch(url, body, config);\n    }\n    delete(url, config) {\n        return this.instance.delete(url, config);\n    }\n}\n\nlet service;\nfunction initialize(options) {\n    let authorization;\n    if (\"apikey\" in options) {\n        authorization = `APIKEY ${options.apikey}`;\n    }\n    else if (\"identity\" in options) {\n        authorization = `IDENTITY ${options.identity}`;\n    }\n    checkInitialized(authorization);\n    const publicUrl = options.publicUrl || getPublicUrl();\n    if (!publicUrl) {\n        throw new Error(\"Public url must be provided.\");\n    }\n    if (!service) {\n        service = new Axios({ baseURL: publicUrl, headers: { Authorization: authorization } });\n    }\n    else {\n        service.setBaseUrl(publicUrl);\n        service.setAuthorization(authorization);\n    }\n    return { authorization, publicUrl, service };\n}\nfunction checkInitialized(authorization) {\n    if (!authorization) {\n        throw new Error(\"You should call initialize method with a valid apikey or identity token.\");\n    }\n}\nfunction getPublicUrl() {\n    return isPlatformBrowser() ? undefined : process.env.__INTERNAL__SPICA__PUBLIC_URL__;\n}\nfunction isPlatformBrowser() {\n    return typeof window !== \"undefined\";\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nlet authorization;\nlet service$1;\nconst identitySegment = \"passport/identity\";\nfunction initialize$1(options) {\n    const { authorization: _authorization, service: _service } = initialize(options);\n    authorization = _authorization;\n    service$1 = _service;\n    service$1.setWriteDefaults({\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\nfunction verifyToken(token, baseUrl) {\n    const _baseUrl = baseUrl ? baseUrl : service$1 ? service$1.baseUrl : undefined;\n    if (!_baseUrl) {\n        throw new Error(\"You should pass the base url of the server or call the initialize method.\");\n    }\n    const req = new Axios({ baseURL: _baseUrl });\n    return req.get(`${identitySegment}/verify`, { headers: { Authorization: token } });\n}\nfunction login(identifier, password, tokenLifeSpan) {\n    checkInitialized(authorization);\n    return service$1\n        .post(\"/passport/identify\", {\n        identifier,\n        password,\n        expires: tokenLifeSpan\n    })\n        .then(response => response.token);\n}\nfunction get(id) {\n    checkInitialized(authorization);\n    return service$1.get(`${identitySegment}/${id}`);\n}\nfunction getAll(queryParams = {}) {\n    checkInitialized(authorization);\n    return service$1.get(identitySegment, {\n        params: queryParams\n    });\n}\nfunction insert(identity) {\n    return __awaiter(this, void 0, void 0, function* () {\n        checkInitialized(authorization);\n        const insertedIdentity = yield service$1.post(identitySegment, identity);\n        return policy.attach(insertedIdentity._id, identity.policies).then(policies => {\n            insertedIdentity.policies = policies;\n            return insertedIdentity;\n        });\n    });\n}\nfunction update(id, identity) {\n    checkInitialized(authorization);\n    return service$1.put(`${identitySegment}/${id}`, identity);\n}\nfunction remove(id) {\n    checkInitialized(authorization);\n    return service$1.delete(`${identitySegment}/${id}`);\n}\n// policy attach detach\nvar policy;\n(function (policy) {\n    function attach(identityId, policyIds = []) {\n        checkInitialized(authorization);\n        const promises = [];\n        const attachedPolicies = new Set();\n        for (const policyId of policyIds) {\n            const promise = service$1\n                .put(`${identitySegment}/${identityId}/policy/${policyId}`, {})\n                .then(() => attachedPolicies.add(policyId))\n                .catch(e => {\n                console.error(`Failed to attach policy with id ${policyId}: `, e);\n                return e;\n            });\n            promises.push(promise);\n        }\n        return Promise.all(promises).then(() => Array.from(attachedPolicies));\n    }\n    policy.attach = attach;\n    function detach(identityId, policyIds = []) {\n        checkInitialized(authorization);\n        const promises = [];\n        const detachedPolicies = new Set();\n        for (const policyId of policyIds) {\n            const promise = service$1\n                .delete(`${identitySegment}/${identityId}/policy/${policyId}`)\n                .then(() => detachedPolicies.add(policyId))\n                .catch(e => {\n                console.error(`Failed to detach policy with id ${policyId}: `, e);\n                return e;\n            });\n            promises.push(promise);\n        }\n        return Promise.all(promises).then(() => Array.from(detachedPolicies));\n    }\n    policy.detach = detach;\n})(policy || (policy = {}));\n\nexport { get, getAll, initialize$1 as initialize, insert, login, policy, remove, update, verifyToken };\n//# sourceMappingURL=index.mjs.map\n"],"sourceRoot":"webpack:///"}